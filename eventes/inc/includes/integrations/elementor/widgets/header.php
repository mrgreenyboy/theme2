<?phpnamespace Elementor;if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directlyclass Elementor_Header_box extends Widget_Base {public function get_name() {return 'Elementor-Header-widget';}public function get_title() {return __( 'Zc >  Header' ,'eventes' );}public function get_icon() {return 'eicon-slider-device';}protected function _register_controls() {$traits = new \eventes_Elementor_Traits($this);$this->start_controls_section('section_tab', ['label' =>esc_html__( 'Header', 'eventes' ),]);$this->add_control('style', ['type'         => Controls_Manager::SELECT,'label'         => esc_html__( 'Choose Style', 'eventes' ),'default'     => 'style1','label_block'     => true,'options'     => ['style1' =>esc_html__( 'Header Style 1', 'eventes' ),'style2' =>esc_html__( 'Header Style 2', 'eventes' ),'style3' =>esc_html__( 'Header Style 3', 'eventes' ),                    ],]);$this->add_control('icon', ['label'             =>esc_html__( 'Icon', 'eventes' ),'type'             => Controls_Manager::TEXT,'condition'      => ['style' =>['style5'],],]);$this->add_control(			'header_background_color',			[				'label' => __( 'Background Color Overlay', 'elementor' ),				'type' => Controls_Manager::COLOR,				'condition'      => [					'style' =>['style2','style3'],					],				'selectors' => [					'{{WRAPPER}} .slider-bg2::before,.slider-bg3::before' => 'background-color: {{VALUE}};',					'{{WRAPPER}} .slider-bg2 .slider-content.second-slider-content::before,.slider-bg2 .slider-content.second-slider-content::after' => 'border-color: {{VALUE}};',				],			]		);				$this->add_control('header_images_ovlerly', ['label'             =>esc_html__( 'Header Images Overlay', 'eventes' ),'type'             => Controls_Manager::MEDIA,'condition'      => ['style' =>['style1'],],]);$this->add_control('header_images', ['label'             =>esc_html__( 'Header Images', 'eventes' ),'type'             => Controls_Manager::MEDIA,'condition'      => ['style' =>['style1'],],]);$this->add_control('header_backgrund_images', ['label'             =>esc_html__( 'Header Background Images', 'eventes' ),'type'             => Controls_Manager::MEDIA,'condition'      => ['style' =>['style1','style2','style3'],],]);$this->add_control('text_list', ['label'             =>esc_html__( 'List', 'eventes' ),'type'             => Controls_Manager::TEXTAREA,'label_block'     => true,'placeholder'     =>esc_html__( 'List Products', 'eventes' ),'default'         =>esc_html__( 'List', 'eventes' ),]);$this->add_control('title_text', ['label'             =>esc_html__( 'Heading Title', 'eventes' ),'type'             => Controls_Manager::TEXT,'label_block'     => true,'placeholder'     =>esc_html__( 'Featured Products', 'eventes' ),'default'         =>esc_html__( 'Featured', 'eventes' ),]);$this->add_control('sub_title', ['label'             =>esc_html__( 'Heading Sub Title', 'eventes' ),'type'             => Controls_Manager::TEXTAREA,'label_block'     => true,'placeholder'     =>esc_html__( 'eventes Text', 'eventes' ),'default'         =>esc_html__( 'eventes', 'eventes' ),'condition'      => ['style' =>['style5'],],]);$this->add_control('desc_title', ['label'             =>esc_html__( 'Description', 'eventes' ),'type'             => Controls_Manager::TEXTAREA,'label_block'     => true,'placeholder'     =>esc_html__( 'eventes Text', 'eventes' ),'default'         =>esc_html__( 'eventes', 'eventes' ),'condition'      => ['style' => ['style5']],]);$this->add_control('count', ['label'             =>esc_html__( 'Counter Text', 'eventes' ),'type'             => Controls_Manager::TEXTAREA,'label_block'     => true,'placeholder'     =>esc_html__( 'eventes Text', 'eventes' ),'default'         =>esc_html__( 'eventes', 'eventes' ),'condition'      => ['style' => ['style1','style3']],]);$this->add_control('button_text', ['label'             =>esc_html__( 'Button Text', 'eventes' ),'type'             => Controls_Manager::TEXT,'condition'      => ['style' =>['style5'],],]);$this->add_control('button_url2', ['label'             =>esc_html__( 'Button URL', 'eventes' ),'type'             => Controls_Manager::URL,'condition'      => ['style' => ['style5'],],]);$this->add_control('button_text2', ['label'             =>esc_html__( 'Button Text', 'eventes' ),'type'             => Controls_Manager::TEXT,'condition'      => ['style' =>['style5'],],]);$this->add_control('button_url', ['label'             =>esc_html__( 'Button URL', 'eventes' ),'type'             => Controls_Manager::URL,'condition'      => ['style' => ['style5'],],]);$this->add_control('shortcode',['label' => __( 'Enter your shortcode', 'eventes' ),'type' => Controls_Manager::TEXTAREA,'dynamic' => ['active' => true,],'placeholder' => '[gallery id="123" size="medium"]','default' => '','condition'      => ['style' => ['style3']],]);$this->add_responsive_control('title_align', ['label'             =>esc_html__( 'Alignment', 'eventes' ),'type'             => Controls_Manager::CHOOSE,'options'         => ['left'         => ['title'     =>esc_html__( 'Left', 'eventes' ),'icon'     => 'fa fa-align-left',],'center'     => ['title'     =>esc_html__( 'Center', 'eventes' ),'icon'     => 'fa fa-align-center',],'right'         => ['title'     =>esc_html__( 'Right', 'eventes' ),'icon'     => 'fa fa-align-right',],'justify'     => ['title'     =>esc_html__( 'Justified', 'eventes' ),'icon'     => 'fa fa-align-justify',],],'default'         => '','selectors' => ['{{WRAPPER}} .inner-item' => 'text-align: {{VALUE}};',],]);$this->end_controls_section();}protected function render( $instance = [] ) {$settings = $this->get_settings();$style = $settings[ 'style' ];$text_list = $settings[ 'text_list' ];$title = $settings[ 'title_text' ];$sub_title = $settings[ 'sub_title' ];$desc_title = $settings[ 'desc_title' ];$count = $settings[ 'count' ];$header_backgrund_images = $settings[ 'header_backgrund_images' ];$header_images = $settings[ 'header_images' ];$header_images_ovlerly = $settings[ 'header_images_ovlerly' ];$icon = $settings[ 'icon' ];$button_text = $settings[ 'button_text' ];$button_url = $settings[ 'button_url' ];$button_text2 = $settings[ 'button_text2' ];$button_url2 = $settings[ 'button_url2' ];$shortcode = $settings[ 'shortcode' ];switch ( $style ) {case 'style1':require get_template_directory() . '/inc/sections/header/style1.php';break;case 'style2':require get_template_directory() . '/inc/sections/header/style2.php';break;case 'style3':require get_template_directory() . '/inc/sections/header/style3.php';break;}}protected function content_template() {}public function render_plain_content() {}}Plugin::instance()->widgets_manager->register_widget_type( new Elementor_Header_box() );